
volumes:
  postgres_data:

networks:
  soanet:  # Red compartida
    driver: bridge

services:
  # ----------- db ----------- #
  postgres:
    image: postgres:14.10
    container_name: postgres
    restart: always
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data 
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_DATABASE=${POSTGRES_DB}
      - ALLOW_EMPTY_PASSWORD=${HIDE_EMPTY_PASSWORD}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - soanet
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - soanet

  # ----------- bus ----------- #
  bus:
    image: jrgiadach/soabus:v1
    platform: linux/amd64
    container_name: soabus
    restart: always
    ports:
      - "5000:5000"
    networks:
      - soanet

  # ----------- servicios ----------- #
  dbcon-service:
    container_name: dbcon-service
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u connectionDB.py"
    volumes:
      - ./services:/app/
    depends_on:
      - postgres
      - bus
    environment:
      - SOABUS_HOST=soabus
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=clinicaUDP
    networks:
      - soanet
  
  usrlg-service:
    container_name: usrlg-service
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u user_login.py"
    volumes:
      - ./services:/app/
    depends_on:
      - postgres
      - bus
    environment:
      - SOABUS_HOST=soabus
    networks:
      - soanet

  usrmn-service:
    container_name: usrmn-service
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u user_management.py"
    volumes:
      - ./services:/app/
    depends_on:
      - postgres
      - bus
    environment:
      - SOABUS_HOST=soabus
    networks:
      - soanet

  # ----------- customers ----------- #
  customers:
    container_name: customers
    restart: "no"
    build:
      context: ./customers
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u super-client.py"
    volumes:
      - ./customers:/app/
    depends_on:
      - postgres
      - bus
    environment:
      - SOABUS_HOST=soabus
    networks:
      - soanet
    stdin_open: true
    tty: true

 

